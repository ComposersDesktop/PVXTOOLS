
#	Mingw pvocex makefile
#	
# to skip fftw, remove -DUSE_FFTW, substitute MXOBJS for FFTWOBJS, 
# and remove $(FFTWLIBS) from the build line
#

CC=gcc
CPP=g++
#HOME = ~
#assumes fftw is built and installed in 'the usual place'
INCFFTW = -I$(HOME)/dev/fftw-2.1.5/fftw -I$(HOME)/dev/fftw-2.1.5/rfftw
IPORTSF = -I../include
LPORTSF = ../lib
FFTWLIBS = -lrfftw -lfftw
MSLIBS= -lkernel32 -luser32 -lole32 -lwinspool -lodbc32 -lgdi32 -lcomdlg32 -ladvapi32 -lshell32 -loleaut32 -luuid
PROG=pvocex.exe
#use MXOBJS for standard CARL version
MXOBJS= mxfft.o crack.o pvoc.o polish.o sfexpr.o
#FFTWOBJS= pvoc.o crack.o polish.o sfexpr.o
#TESTOBJS=pvoc-ptest.o crack.o polish.o sfexpr.o pshift.o

#modify to suit your processor, etc 
#CFLAGS = -O3 -Dunix -DUSE_FFTW -DFFTW_ENABLE_FLOAT -fomit-frame-pointer  -funroll-loops $(IPORTSF) $(INCFFTW)
CFLAGS = -O3 -fomit-frame-pointer  -funroll-loops $(IPORTSF)
#
#	targets
#

.c.o:
	$(CC) $(CFLAGS) -c $<
.cpp.o:
	$(CPP) $(CFLAGS) -c $<

all:	$(PROG)

clean:
#	-rm -f $(FFTWOBJS)
	-rm -f $(MXOBJS)

veryclean:
#	-rm -f $(FFTWOBJS) pvocex
	-rm -f $(MXOBJS) pvocex

#pvocex:	$(FFTWOBJS)
$(PROG):	$(MXOBJS)
#	$(CC) $(CFLAGS) -o pvocex  $(FFTWOBJS) -lm $(LPORTSF) $(FFTWLIBS)
	$(CC) $(CFLAGS) -o pvocex.exe $(MXOBJS) -lm -L$(LPORTSF) -lportsf -lpvxio $(MSLIBS)

install:    $(PROG)
    cp $(PROG) ../Release

#
#	dependencies
#
pvoc.o mxfft.o:	pvoc.h
